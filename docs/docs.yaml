openapi: 3.0.0
info:
  version: 1.0.0
  title: Calendar API
  description:
    This is the documentation for the Rest API that created events using
    Googleapis and Express
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
tags:
  - name: auth
  - name: users
  - name: invitees
  - name: events-types
  - name: events
  - name: links
servers:
  - url: /api/v1
    description: version 1
paths:
  /auth/sign-up:
    post:
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/validate-user:
    get:
      tags:
        - users
      parameters:
        - name: email
          in: query
          description: The email for the user
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /invitees:
    get:
      tags:
        - invitees
      parameters:
        - name: email
          in: query
          description: The email for the invitee
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Invitee"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /events-types:
    get:
      tags:
        - events-types
      parameters:
        - name: eventName
          in: query
          description: The name for the event type
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventType"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /events:
    get:
      tags:
        - events
      parameters:
        - name: email
          in: query
          description: The user's email
          required: true
          schema:
            type: string
        - name: timeZone
          in: query
          description: The user's timeZone
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CalendarEvents"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
        - events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEvent"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /links/encode:
    post:
      tags:
        - links
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EncodeData"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: string   
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /links/decode:
    post:
      tags:
        - links
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                hash:
                  type: string
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DecodeData"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      properties:
        uuid:
          type: string
        fullName:
          type: string
        email:
          type: string
        picture:
          type: string
        refreshToken:
          type: string
        organizationId:
          type: string
        createdAt:
          type: string
    Invitee:
      type: object
      properties:
        id:
          type: number
        uuid:
          type: string
        email:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    EventType:
      type: object
      properties:
        id:
          type: string
        uuid:
          type: string
        name:
          type: string
        location:
          type: string
        description:
          type: string
        eventLink:
          type: string
        eventColor:
          type: string
        eventDuration:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CalendarEvents:
      type: object
      properties:
        data:
          type: object
          properties:
            calendars:
              type: object
              properties:
                primary:
                  type: object
                  properties:
                    busy:
                      type: array
                      items:
                        type: object
                        properties:
                          start:
                            type: string
                            format: date-time
                          end:
                            type: string
                            format: date-time
    CreateEvent:
      type: object
      required:
      - "hash"
      - "timeZone"
      - "startDatetime"
      properties:
        hash:
          type: string
        inviteeEmail:
         type: string
        timeZone:
          type: string
        startDatetime:
          type: string
          format: date-time
    Event:
      type: object
      properties:
        uuid:
          type: string
        inviteeEmail:
          type: string
        meetingLink:
          type: string
        timeZone:
          type: string
        meetingStart:
          type: string
          format: date-time
        meetingFinish:
          type: string
          format: date-time
        userId:
          type: number
        inviteeId:
          type: number
        eventTypeId:
          type: number
        createdAt:
          type: string
    EncodeData:
      type: object
      required:
      - "inviterUUID"
      - "eventTypeUUID"
      properties:
        inviterUUID:
          type: string
        inviteeUUID:
          type: string
        eventTypeUUID:
          type: string
    DecodeData:
      type: object
      required:
      - "inviteerEmail"
      - "eventName"
      - "duration"
      properties:
        inviteerEmail:
          type: string
        inviteeEmail:
          type: string
        eventName:
          type: string
        duration:
          type: number
    Error:
      type: object
      properties:
        message:
          type: string
        statusCode:
          type: integer
        errors:
          type: array
          items:
            type: object
            properties:
              property:
                type: string
              constraint:
                type: array
                items:
                  type: string
